{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\korek\\\\Desktop\\\\project\\\\posilkoved-repo\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Header from './components/header.js';\nimport Main from './components/main.js';\nimport Footer from './components/footer.js';\nimport AuthForm from './components/authForm.js';\nimport RegisterForm from './components/registerForm.js';\nimport RecoveryForm from './components/recoveryForm.js';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formType: '',\n      mainType: 'home',\n      //home\n      orderType: '200',\n      //200\n      login: '' // formType: 'auth',\n      // formType: 'register',\n      // formType: 'recovery',\n\n    };\n    this.setFormType = this.setFormType.bind(this);\n    this.setMainType = this.setMainType.bind(this);\n    this.fetchGetLogin = this.fetchGetLogin.bind(this);\n    this.delLogin = this.delLogin.bind(this);\n    this.setOrderType = this.setOrderType.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGetLogin();\n  }\n\n  async fetchGetLogin(userLogin) {\n    if (userLogin) {\n      this.setState({\n        login: userLogin\n      });\n    } else {\n      const res = await fetch('/api/auth', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        }\n      });\n      const result = await res.json();\n\n      if (res.ok) {\n        this.setState({\n          login: result.result\n        });\n      } // нет проверки на ошибки при get запросе!!!!\n\n    }\n  }\n\n  setMainType(type = 'home') {\n    this.setState({\n      mainType: type\n    });\n  }\n\n  setFormType(type = '') {\n    this.setState({\n      formType: type\n    });\n  }\n\n  delLogin() {\n    this.setState({\n      login: ''\n    });\n  }\n\n  setOrderType(type) {\n    console.log(type);\n    if (!localStorage.length) return;\n\n    if (type === '200') {\n      this.setState({\n        orderType: '200',\n        mainType: 'forms'\n      });\n    } else if (type === '1000') {\n      this.setState({\n        orderType: '1000',\n        mainType: 'forms'\n      });\n    }\n  }\n\n  render() {\n    //говнокод\n    let form;\n    document.querySelector('html').style.overflow = 'hidden';\n\n    switch (this.state.formType) {\n      case 'auth':\n        form = /*#__PURE__*/_jsxDEV(AuthForm, {\n          setFormType: this.setFormType,\n          getLogin: this.fetchGetLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'register':\n        form = /*#__PURE__*/_jsxDEV(RegisterForm, {\n          setFormType: this.setFormType,\n          getLogin: this.fetchGetLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'recovery':\n        form = /*#__PURE__*/_jsxDEV(RecoveryForm, {\n          setFormType: this.setFormType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this);\n        break;\n\n      default:\n        document.querySelector('html').style.overflow = 'visible'; //visible\n\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setFormType: this.setFormType,\n        setMainType: this.setMainType,\n        delLogin: this.delLogin,\n        login: this.state.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        mainType: this.state.mainType,\n        setOrderType: this.setOrderType,\n        orderType: this.state.orderType,\n        setFormType: this.setFormType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/korek/Desktop/project/posilkoved-repo/client/src/App.js"],"names":["React","Header","Main","Footer","AuthForm","RegisterForm","RecoveryForm","App","Component","constructor","state","formType","mainType","orderType","login","setFormType","bind","setMainType","fetchGetLogin","delLogin","setOrderType","componentDidMount","userLogin","setState","res","fetch","headers","localStorage","getItem","result","json","ok","type","console","log","length","render","form","document","querySelector","style","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Header from './components/header.js'\r\nimport Main from './components/main.js'\r\nimport Footer from './components/footer.js'\r\nimport AuthForm from './components/authForm.js'\r\nimport RegisterForm from './components/registerForm.js'\r\nimport RecoveryForm from './components/recoveryForm.js'\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      formType: '',\r\n      mainType: 'home', //home\r\n      orderType: '200', //200\r\n      login: '',\r\n      // formType: 'auth',\r\n      // formType: 'register',\r\n      // formType: 'recovery',\r\n    }\r\n\r\n    this.setFormType = this.setFormType.bind(this)\r\n    this.setMainType = this.setMainType.bind(this)\r\n    this.fetchGetLogin = this.fetchGetLogin.bind(this)\r\n    this.delLogin = this.delLogin.bind(this)\r\n    this.setOrderType = this.setOrderType.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGetLogin()\r\n  }\r\n\r\n  async fetchGetLogin(userLogin) {\r\n    if (userLogin) {\r\n      this.setState({login: userLogin})\r\n    } else {\r\n      const res = await fetch('/api/auth', { \r\n          headers: {\r\n            'Content-Type':'application/json',\r\n            'Authorization': localStorage.getItem('token')\r\n          },\r\n        }\r\n      )\r\n      const result = await res.json()\r\n\r\n      if (res.ok) {\r\n        this.setState({login: result.result})\r\n      } // нет проверки на ошибки при get запросе!!!!\r\n    }\r\n  }\r\n\r\n  setMainType(type = 'home') {\r\n    this.setState({mainType: type})\r\n  }\r\n\r\n  setFormType(type = '') {\r\n    this.setState({formType: type})\r\n  }\r\n\r\n  delLogin() {\r\n    this.setState({login: ''})\r\n  }\r\n\r\n  setOrderType(type) {\r\n    console.log(type)\r\n    if (!localStorage.length) return\r\n    if (type === '200') {\r\n      this.setState({\r\n        orderType: '200',\r\n        mainType: 'forms',\r\n      })\r\n    } else if (type === '1000') {\r\n      this.setState({\r\n        orderType: '1000',\r\n        mainType: 'forms'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //говнокод\r\n    let form\r\n    document.querySelector('html').style.overflow = 'hidden' \r\n    switch (this.state.formType) {\r\n      case 'auth':\r\n        form = <AuthForm setFormType={this.setFormType} getLogin={this.fetchGetLogin} />\r\n        break\r\n      case 'register': \r\n        form = <RegisterForm setFormType={this.setFormType} getLogin={this.fetchGetLogin}/>\r\n        break\r\n      case 'recovery':\r\n        form = <RecoveryForm setFormType={this.setFormType} />\r\n        break\r\n      default:\r\n        document.querySelector('html').style.overflow = 'visible'\r\n        //visible\r\n        break\r\n    }\r\n\r\n    return (\r\n      <div className='app'>\r\n        <Header \r\n          setFormType={this.setFormType} \r\n          setMainType={this.setMainType}\r\n          delLogin={this.delLogin}\r\n          login={this.state.login}\r\n        />\r\n        <Main \r\n          mainType={this.state.mainType} \r\n          setOrderType={this.setOrderType}\r\n          orderType={this.state.orderType}\r\n          setFormType={this.setFormType} \r\n        />\r\n        <Footer />\r\n        {form}\r\n        {/* <AuthForm /> */}\r\n        {/* <RegisterForm /> */}\r\n        {/* <RecoveryForm /> */}\r\n      </div>\r\n    )\r\n  } \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}