{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User_ya\\\\Desktop\\\\repos\\\\posilkoved-repo\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Header from './components/header.js';\nimport Main from './components/main.js';\nimport Footer from './components/footer.js';\nimport AuthForm from './components/authForm.js';\nimport RegisterForm from './components/registerForm.js';\nimport RecoveryForm from './components/recoveryForm.js';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formType: '',\n      login: '' // formType: 'auth',\n      // formType: 'register',\n      // formType: 'recovery',\n\n    };\n    this.setFormType = this.setFormType.bind(this); // this.getLogin = this.getLogin.bind(this) \n  }\n\n  componentDidMount() {\n    async function fetchGetLogin() {\n      const res = await fetch('/api/auth', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        }\n      });\n      const result = await res.json();\n\n      if (res.ok) {\n        this.setState({\n          login: result.result\n        });\n      } // нет проверки на ошибки при get запросе!!!!\n\n    }\n\n    fetchGetLogin.call(this);\n  }\n\n  setFormType(type = '') {\n    this.setState({\n      formType: type\n    });\n  }\n\n  render() {\n    //говнокод\n    let form;\n    document.querySelector('html').style.overflow = 'hidden';\n\n    switch (this.state.formType) {\n      case 'auth':\n        form = /*#__PURE__*/_jsxDEV(AuthForm, {\n          setFormType: this.setFormType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'register':\n        form = /*#__PURE__*/_jsxDEV(RegisterForm, {\n          setFormType: this.setFormType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'recovery':\n        form = /*#__PURE__*/_jsxDEV(RecoveryForm, {\n          setFormType: this.setFormType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this);\n        break;\n\n      default:\n        document.querySelector('html').style.overflow = 'visible'; //visible\n\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setFormType: this.setFormType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User_ya/Desktop/repos/posilkoved-repo/client/src/App.js"],"names":["React","Header","Main","Footer","AuthForm","RegisterForm","RecoveryForm","App","Component","constructor","state","formType","login","setFormType","bind","componentDidMount","fetchGetLogin","res","fetch","headers","localStorage","getItem","result","json","ok","setState","call","type","render","form","document","querySelector","style","overflow"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAE,EAFI,CAGX;AACA;AACA;;AALW,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB,CAVY,CAWZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,mBAAeC,aAAf,GAA+B;AAE7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;AACjCC,QAAAA,OAAO,EAAE;AACP,0BAAe,kBADR;AAEP,2BAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFV;AADwB,OAAd,CAAvB;AAOA,YAAMC,MAAM,GAAG,MAAML,GAAG,CAACM,IAAJ,EAArB;;AAEA,UAAIN,GAAG,CAACO,EAAR,EAAY;AACV,aAAKC,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAEU,MAAM,CAACA;AAAf,SAAd;AACD,OAb4B,CAa3B;;AACH;;AAEDN,IAAAA,aAAa,CAACU,IAAd,CAAmB,IAAnB;AACD;;AAEDb,EAAAA,WAAW,CAACc,IAAI,GAAG,EAAR,EAAY;AACrB,SAAKF,QAAL,CAAc;AAACd,MAAAA,QAAQ,EAAEgB;AAAX,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,IAAJ;AACAC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,QAAhD;;AACA,YAAQ,KAAKvB,KAAL,CAAWC,QAAnB;AACE,WAAK,MAAL;AACEkB,QAAAA,IAAI,gBAAG,QAAC,QAAD;AAAU,UAAA,WAAW,EAAE,KAAKhB;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACF,WAAK,UAAL;AACEgB,QAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,UAAA,WAAW,EAAE,KAAKhB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACF,WAAK,UAAL;AACEgB,QAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,UAAA,WAAW,EAAE,KAAKhB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACF;AACEiB,QAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,QAArC,GAAgD,SAAhD,CADF,CAEE;;AACA;AAbJ;;AAgBA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,WAAW,EAAE,KAAKpB;AADpB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cALF,EAMGgB,IANH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAxE8C","sourcesContent":["import React from 'react'\nimport Header from './components/header.js'\nimport Main from './components/main.js'\nimport Footer from './components/footer.js'\nimport AuthForm from './components/authForm.js'\nimport RegisterForm from './components/registerForm.js'\nimport RecoveryForm from './components/recoveryForm.js'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      formType: '',\n      login: '',\n      // formType: 'auth',\n      // formType: 'register',\n      // formType: 'recovery',\n    }\n\n    this.setFormType = this.setFormType.bind(this)\n    // this.getLogin = this.getLogin.bind(this) \n  }\n\n  componentDidMount() {\n    async function fetchGetLogin() {\n\n      const res = await fetch('/api/auth', { \n          headers: {\n            'Content-Type':'application/json',\n            'Authorization': localStorage.getItem('token')\n          },\n        }\n      )\n      const result = await res.json()\n\n      if (res.ok) {\n        this.setState({login: result.result})\n      } // нет проверки на ошибки при get запросе!!!!\n    }\n\n    fetchGetLogin.call(this)\n  }\n\n  setFormType(type = '') {\n    this.setState({formType: type})\n  }\n\n  render() {\n    //говнокод\n    let form\n    document.querySelector('html').style.overflow = 'hidden' \n    switch (this.state.formType) {\n      case 'auth':\n        form = <AuthForm setFormType={this.setFormType} />\n        break\n      case 'register': \n        form = <RegisterForm setFormType={this.setFormType} />\n        break\n      case 'recovery':\n        form = <RecoveryForm setFormType={this.setFormType} />\n        break\n      default:\n        document.querySelector('html').style.overflow = 'visible'\n        //visible\n        break\n    }\n\n    return (\n      <div className='app'>\n        <Header \n          setFormType={this.setFormType} \n        />\n        <Main />\n        <Footer />\n        {form}\n        {/* <AuthForm /> */}\n        {/* <RegisterForm /> */}\n        {/* <RecoveryForm /> */}\n      </div>\n    )\n  } \n}\n\n"]},"metadata":{},"sourceType":"module"}