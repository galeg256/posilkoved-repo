{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User_ya\\\\Desktop\\\\repos\\\\posilkoved-repo\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport Header from './components/header.js';\nimport Main from './components/main.js';\nimport Footer from './components/footer.js';\nimport AuthForm from './components/authForm.js';\nimport RegisterForm from './components/registerForm.js';\nimport RecoveryForm from './components/recoveryForm.js';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      formType: '',\n      //register, auth, recovery\n      mainType: 'home',\n      //home, forms\n      orderType: '',\n      //200, 1000\n      login: '',\n      // formType: 'auth',\n      // formType: 'register',\n      // formType: 'recovery',\n      desiredOrder: ''\n    };\n    this.setFormType = this.setFormType.bind(this);\n    this.setMainType = this.setMainType.bind(this);\n    this.fetchGetLogin = this.fetchGetLogin.bind(this);\n    this.delLogin = this.delLogin.bind(this);\n    this.setOrderType = this.setOrderType.bind(this);\n    this.setDesiredOrder = this.setDesiredOrder.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchGetLogin();\n  }\n\n  async fetchGetLogin(userLogin) {\n    if (userLogin) {\n      this.setState({\n        login: userLogin\n      });\n    } else {\n      const res = await fetch('/api/auth', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        }\n      });\n      const result = await res.json();\n\n      if (res.ok) {\n        this.setState({\n          login: result.result\n        });\n      } // нет проверки на ошибки при get запросе!!!!\n\n    }\n  }\n\n  setMainType(type = 'home') {\n    this.setState({\n      mainType: type\n    });\n  }\n\n  setFormType(type = '') {\n    this.setState({\n      formType: type\n    });\n  }\n\n  delLogin() {\n    this.setState({\n      login: ''\n    });\n  }\n\n  setOrderType(type = '') {\n    console.log(type);\n\n    if (!localStorage.length) {\n      this.setState({\n        orderType: ''\n      });\n      return;\n    }\n\n    if (type === '200') {\n      this.setState({\n        orderType: '200',\n        mainType: 'forms'\n      });\n    } else if (type === '1000') {\n      this.setState({\n        orderType: '1000',\n        mainType: 'forms'\n      });\n    }\n  }\n\n  setDesiredOrder(order = '') {\n    this.setState({\n      desiredOrder: order\n    });\n  }\n\n  render() {\n    //говнокод\n    let form;\n    document.querySelector('html').style.overflow = 'hidden';\n\n    switch (this.state.formType) {\n      case 'auth':\n        form = /*#__PURE__*/_jsxDEV(AuthForm, {\n          setFormType: this.setFormType,\n          getLogin: this.fetchGetLogin,\n          setOrderType: this.setOrderType,\n          setDesiredOrder: this.setDesiredOrder,\n          desiredOrder: this.state.desiredOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'register':\n        form = /*#__PURE__*/_jsxDEV(RegisterForm, {\n          setFormType: this.setFormType,\n          getLogin: this.fetchGetLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this);\n        break;\n\n      case 'recovery':\n        form = /*#__PURE__*/_jsxDEV(RecoveryForm, {\n          setFormType: this.setFormType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 16\n        }, this);\n        break;\n\n      default:\n        document.querySelector('html').style.overflow = 'visible'; //visible\n\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setFormType: this.setFormType,\n        setMainType: this.setMainType,\n        delLogin: this.delLogin,\n        login: this.state.login,\n        setOrderType: this.setOrderType,\n        setDesiredOrder: this.setDesiredOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        mainType: this.state.mainType,\n        setOrderType: this.setOrderType,\n        orderType: this.state.orderType,\n        setFormType: this.setFormType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User_ya/Desktop/repos/posilkoved-repo/client/src/App.js"],"names":["React","Header","Main","Footer","AuthForm","RegisterForm","RecoveryForm","App","Component","constructor","state","formType","mainType","orderType","login","desiredOrder","setFormType","bind","setMainType","fetchGetLogin","delLogin","setOrderType","setDesiredOrder","componentDidMount","userLogin","setState","res","fetch","headers","localStorage","getItem","result","json","ok","type","console","log","length","order","render","form","document","querySelector","style","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './components/header.js'\nimport Main from './components/main.js'\nimport Footer from './components/footer.js'\nimport AuthForm from './components/authForm.js'\nimport RegisterForm from './components/registerForm.js'\nimport RecoveryForm from './components/recoveryForm.js'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      formType: '', //register, auth, recovery\n      mainType: 'home', //home, forms\n      orderType: '', //200, 1000\n      login: '',\n      // formType: 'auth',\n      // formType: 'register',\n      // formType: 'recovery',\n      desiredOrder: ''\n    }\n\n    this.setFormType = this.setFormType.bind(this)\n    this.setMainType = this.setMainType.bind(this)\n    this.fetchGetLogin = this.fetchGetLogin.bind(this)\n    this.delLogin = this.delLogin.bind(this)\n    this.setOrderType = this.setOrderType.bind(this)\n    this.setDesiredOrder = this.setDesiredOrder.bind(this)\n  }\n\n  componentDidMount() {\n    this.fetchGetLogin()\n  }\n\n  async fetchGetLogin(userLogin) {\n    if (userLogin) {\n      this.setState({login: userLogin})\n    } else {\n      const res = await fetch('/api/auth', { \n          headers: {\n            'Content-Type':'application/json',\n            'Authorization': localStorage.getItem('token')\n          },\n        }\n      )\n      const result = await res.json()\n\n      if (res.ok) {\n        this.setState({login: result.result})\n      } // нет проверки на ошибки при get запросе!!!!\n    }\n  }\n\n  setMainType(type = 'home') {\n    this.setState({mainType: type})\n  }\n\n  setFormType(type = '') {\n    this.setState({formType: type})\n  }\n\n  delLogin() {\n    this.setState({login: ''})\n  }\n\n  setOrderType(type = '') {\n    console.log(type)\n    if (!localStorage.length) {\n      this.setState({orderType: ''})\n      return \n    }\n\n    if (type === '200') {\n      this.setState({\n        orderType: '200',\n        mainType: 'forms',\n      })\n    } else if (type === '1000') {\n      this.setState({\n        orderType: '1000',\n        mainType: 'forms'\n      })\n    }\n  }\n\n  setDesiredOrder(order = '') {\n    this.setState({desiredOrder: order})\n  }\n\n  render() {\n    //говнокод\n    let form\n    document.querySelector('html').style.overflow = 'hidden' \n    switch (this.state.formType) {\n      case 'auth':\n        form = <AuthForm \n          setFormType={this.setFormType} \n          getLogin={this.fetchGetLogin} \n          setOrderType={this.setOrderType} \n          setDesiredOrder={this.setDesiredOrder}\n          desiredOrder={this.state.desiredOrder}\n        />\n        break\n      case 'register': \n        form = <RegisterForm \n          setFormType={this.setFormType} \n          getLogin={this.fetchGetLogin} />\n        break\n      case 'recovery':\n        form = <RecoveryForm setFormType={this.setFormType} />\n        break\n      default:\n        document.querySelector('html').style.overflow = 'visible'\n        //visible\n        break\n    }\n\n    return (\n      <div className='app'>\n        <Header \n          setFormType={this.setFormType} \n          setMainType={this.setMainType}\n          delLogin={this.delLogin}\n          login={this.state.login}\n          setOrderType={this.setOrderType}\n          setDesiredOrder={this.setDesiredOrder}\n        />\n        <Main \n          mainType={this.state.mainType} \n          setOrderType={this.setOrderType}\n          orderType={this.state.orderType}\n          setFormType={this.setFormType} \n        />\n        <Footer />\n        {form}\n        {/* <AuthForm /> */}\n        {/* <RegisterForm /> */}\n        {/* <RecoveryForm /> */}\n      </div>\n    )\n  } \n}\n\n"]},"metadata":{},"sourceType":"module"}